
function [parameter,state_terminal1]=Parametric_Trajectory_Generation(parameter_previous,state_initial,state_terminal,parameter_inherit_flag)

%  parmeter_previous=[0,0,0,5];
%  state_initial=[0,0,0,0];
%  state_terminal=[5,0,-0.1745,0]
%  parameter_inherit_flag=0;
%%%%%%ï¿½ï¿½ï¿½Ã³ï¿½Ê¼×´Ì¬%%%%%%%
%%%%%%ï¿½ï¿½ï¿½è³µï¿½ï¿½×´Ì¬Îª4D×´Ì¬ï¿½Õ¼ï¿½(x ,y ,theta ,k_curve),(x,y)ÎªÎ»ï¿½Ã£ï¿½thetaÎªï¿½ï¿½ï¿½ï¿½Ç£ï¿½k_curveÎªï¿½ï¿½ï¿½ï¿½
global rotate_theta  %ï¿½ï¿½ï¿½ï¿½È«ï¿½Ö±ï¿½ï¿½ï¿½_ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½Ç²ï¿½Îªï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Ã´ï¿½ï¿½ï¿½ï¿½ï¿½Òªï¿½ï¿½×ªï¿½Ä½Ç¶È¾ï¿½Îªrotate_theta
% rotate_theta=state_initial(3);
% if  rotate_theta~=0
%     state_initial=[0 0 0 0];
%     x_temp=state_terminal(1);
%     y_temp=state_terminal(2);
%     state_terminal(1)=x_temp*cos(rotate_theta)+y_temp*sin(rotate_theta);%ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½Ç²ï¿½Îªï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Òªï¿½ï¿½ï¿½È½ï¿½ï¿½ï¿½ï¿½ï¿½×?
%     state_terminal(2)=-x_temp*sin(rotate_theta)+y_temp*cos(rotate_theta);
%     state_terminal(3)=state_terminal(3)-rotate_theta;
% end

k_curve(1)=state_initial(4);
yacobian_matrix=zeros(4,4);%ï¿½ï¿½Ê¼ï¿½ï¿½yacobianï¿½ï¿½ï¿½ï¿½4*4ï¿½Ä·ï¿½ï¿½ï¿½
parameter_adj=[1e-6, 1e-6,1e-6,1e-3*5]; % ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½yacobianï¿½ï¿½ï¿½ï¿½Ê±ï¿½Ä²ï¿½ï¿½ï¿½ä»¯ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
state_error_weight=[50 50 50 50]; % ï¿½ï¿½ï¿½ï¿½×´Ì¬ï¿½ï¿½ï¿½ï¿½È¨ï¿½Ø£ï¿½ï¿½Ð¶ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
max_iteration=7;   %ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ëµï¿½ï¿½ï¿½ï¿½ï¿½Ã»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä»ï¿½ï¿½ï¿½ï¿½ï¿½Ã´ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½Þ½â¡?

%%%%%%%%ï¿½Ô²ï¿½ï¿½ï¿½ï¿½ï¿½Ð³ï¿½Ê¼ï¿½ï¿?%%%%%%%%%%%%%
x_terminal=state_terminal(1);
y_terminal=state_terminal(2);
theta_terminal=state_terminal(3);
k_curve_terminal=state_terminal(4);

%     d=sqrt(x_terminal^2+y_terminal^2);
%     s_initial=d*(theta_terminal^2/5+1)+2*abs(theta_terminal)/5;
%     a_initial=6*theta_terminal/(s_initial^2)-2*k_curve(1)/s_initial+4*k_curve_terminal/s_initial;
%     b_initial=3*(k_curve(1)+k_curve_terminal)/(s_initial^2)+6*theta_terminal/(s_initial^3);
%     c_initial=0;
%     parameter_initial=[a_initial b_initial c_initial s_initial];%ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
%    parameter=parameter_initial;
parameter=parameter_previous;
Q(:,1)=parameter_previous;
for k=1:max_iteration
    [state_terminal1]=state_calculate(parameter,state_initial);
    state_error=state_terminal-state_terminal1;%ï¿½ï¿½ï¿½ï¿½Ä©ï¿½ï¿½×´Ì¬ï¿½ï¿½ï¿?
    
    index=k;
    state_error_1=abs(state_error_weight(1)*state_error(1));
    state_error_2=abs(state_error_weight(2)*state_error(2));
    state_error_3=abs(state_error_weight(3)*state_error(3));
    state_error_4=0*abs(state_error_weight(4)*state_error(4));
    if (state_error_1)<1&&(state_error_2<1)&&(state_error_3<1)&&(state_error_4<1)%%ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
        %state_error=state_terminal-state_terminal_1 ; %%%ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½Ãµï¿½×´Ì¬ï¿½ï¿½ï¿½
        %trajectory_curve_draw(parameter,state_initial); %ï¿½ï¿½ï¿½Ã»ï¿½ï¿½ï¿½ï¿½ßµÄºï¿½ï¿½ï¿½
        break; %ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½forÑ­ï¿½ï¿½
    end
    if(norm(state_error)>10^2)
        if(k>2)
            parameter=Q(:,k-2);
        else
            parameter=Q(:,1);
        end
        [state_terminal1]=state_calculate(parameter,state_initial);
        break;
    end
    state_terminal_current = state_terminal1;
    delt_state_teminal_current = state_terminal-state_terminal_current;
    
    %%%%%%%%%%%%%%%ï¿½ï¿½jacobianï¿½ï¿½ï¿½ï¿½%%%%%%%%%%%%%
    for i=1:length(parameter)
        %%%%%%%%%%%ï¿½ï¿½ï¿½ï¿½Ò»
        parameter_1=parameter;
        parameter_1(i)=parameter(i)+parameter_adj(i);   %ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Î¢ï¿½ï¿½ï¿½ï¿½Í¨ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È·ï¿½Ä±ä»¯ï¿½ï¿½ï¿½Æ¡ï¿?
        %[Q,state_terminal1]=FirstDerivatives(parameter_1,state_initial);
        [state_terminal1]=state_calculate(parameter_1,state_initial);
        state_error=state_terminal-state_terminal1;
        current = (state_error - delt_state_teminal_current)./parameter_adj(i);%ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ«ï¿½ï¿?
        yacobian_matrix(1:4,i)=current;
    end
    state_error=delt_state_teminal_current;  %ï¿½Û²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð£ï¿½×´Ì¬ï¿½ï¿½ï¿½Ä½ï¿½ï¿?
    delta_parameter=-inv(yacobian_matrix)*state_error';  %%ï¿½ï¿½ï¿½ï¿½ï¿½ä»¯ï¿½ï¿½Ð¡
    parameter=delta_parameter'+parameter; %ï¿½Ãµï¿½ï¿½ÂµÄ²ï¿½ï¿½ï¿½
    Q(:,k)=parameter;
end







